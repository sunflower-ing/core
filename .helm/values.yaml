# Default values for sunflower.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    username: "sunflower-user"
    database: "sunflower-db"

  primary:
    resources:
      limits:
        memory: 1Gi
        cpu: 500m
      requests:
        memory: 1Gi
        cpu: 250m

application:
  migrate:
    enabled: true

  configs:
    FORCE_SCRIPT_NAME: /
    DB_ENGINE: django.db.backends.postgresql
    DB_NAME: "sunflower-db"
    # DB_HOST: localhost
    DB_PORT: 5432
    DEBUG: 'True'
    # CSRF_TRUSTED_ORIGINS: "sunflower.com" ## Need only for debug
    # ALLOWED_HOSTS: "sunflower.com"

  replicaCount: 1

  image:
    repository: ghcr.io/amazeit/sunflower/sunflower
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag:

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ocsp:
    ingress:
      enabled: false
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /ocsp/$1
      hosts:
        - host: ocsp.example.local
          paths:
            - path: /(.*)
              pathType: ImplementationSpecific
      tlsSecretName: fakesecret
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  api:
    ingress:
      enabled: false
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
      hosts:
        - host: api.example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tlsSecretName: fakesecret
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  crl:
    ingress:
      enabled: false
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /crl/$1
      hosts:
        - host: crl.example.local
          paths:
            - path: /(.*)
              pathType: ImplementationSpecific
      tlsSecretName: fakesecret
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
